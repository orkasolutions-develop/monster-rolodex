{"version":3,"sources":["components/ui/Theme.js","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","common","orkaBlue","orkaOrange","primary","main","secondary","typography","tab","fontFamily","textTransform","fontWeight","fontSize","estimate","color","h1","lineHeight","h2","h3","h4","h6","subtitle1","subtitle2","body1","caption","learnButton","borderColor","borderWidth","borderRadius","overrides","MuiInputLabel","root","MuiInput","underline","borderBottom","useStyles","makeStyles","theme","cardContainer","display","flexDirection","backgroundColor","border","padding","cursor","backfaceVisibility","transform","transition","CardComponent","props","classes","className","alt","src","monster","id","name","email","cardList","width","margin","gridTemplateColumns","gridGap","CardListComponent","monsters","map","key","flexGrow","search","webkitAppearance","outline","marginBottom","SearchBoxComponent","placeHolder","handleChange","Grid","item","container","spacing","xs","TextField","variant","placeholder","label","onChange","App","e","setState","target","value","state","searchField","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","ThemeProvider","Typography","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d0f5425.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles';\n\nconst orkaBlue = \"#0B72B9\";\nconst orkaOrange = \"#FFBA60\";\nconst orkaGrey = \"#868686\";\nconst monsterBlue = \"#95dada\";\n\n\nexport default createMuiTheme({\n    palette: {\n        common: {\n            orkaBlue: orkaBlue,\n            orkaOrange: orkaOrange\n        },\n        primary: {\n            main: orkaBlue\n        },\n        secondary: {\n            main: orkaOrange\n        }\n    },\n    typography: {\n        tab: {\n            fontFamily: \"Roboto\",\n            textTransform: \"none\",\n            fontWeight: 700,\n            fontSize: \"1rem\",\n        },\n        estimate: {\n            fontFamily: \"Pacifico\",\n            textTransform: \"none\",\n            fontSize: \"1rem\",\n            color: \"white\"\n        },\n        h1: {\n            fontFamily: \"Bigelow Rules\",\n            fontWeight: 700,\n            fontSize: \"72px\",\n            color: monsterBlue,\n            lineHeight: 1.5\n        },\n\n        h2: {\n            fontFamily: \"Roboto\",\n            fontWeight: 700,\n            fontSize: \"2.5rem\",\n            color: orkaBlue,\n            lineHeight: 1.5\n        },\n        h3: {\n            fontFamily: \"Pacifico\",\n            fontSize: \"2.5rem\",\n            color: orkaBlue,\n        },\n        h4: {\n            fontFamily: \"Roboto\",\n            fontWeight: 700,\n            fontSize: \"1.75rem\",\n            color: orkaBlue,\n        },\n        h6: {\n            fontFamily: \"Roboto\",\n            fontWeight: 500,\n            color: orkaBlue,\n            lineHeight: 1\n        },\n        subtitle1: {\n            fontSize: \"1.25rem\",\n            fontWeight: 300,\n            color: orkaGrey,\n\n        },\n        subtitle2: {\n            color: \"white\",\n            fontSize: \"1.25rem\",\n            fontWeight: 300\n        },\n        body1: {\n            fontSize: \"1.25rem\",\n            color: orkaGrey,\n            fontWeight: 300\n        },\n        caption: {\n            fontSize: \"1.25rem\",\n            fontWeight: 300,\n            color: orkaGrey\n        },\n        learnButton: {\n            borderColor: orkaBlue,\n            borderWidth: 2,\n            textTransform: \"none\",\n            color: orkaBlue,\n            borderRadius: 50,\n            fontFamily: \"Roboto\",\n            fontWeight: \"bold\",\n        },\n    },\n    overrides: {\n        MuiInputLabel: {\n            root: {\n                color: orkaBlue,\n                fontSize: \"1em\"\n            }\n        },\n        MuiInput: {\n            root: {\n              color: orkaGrey,\n              fontWeight: 300\n            },\n            underline: {\n                \"&:before\": {\n                    borderBottom: `2px solid ${orkaBlue}`\n                },\n                \"&:hover:not($disabled):not($focused):not($error):before\": {\n                    borderBottom: `2px solid ${orkaBlue}`\n                }\n            }\n        }\n    }\n});\n","import * as React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\n        cardContainer: {\n            display: 'flex',\n            flexDirection: 'column',\n            backgroundColor: '#95dada',\n            border: '1px solid grey',\n            borderRadius: '5px',\n            padding: '25px',\n            cursor: 'pointer',\n            backfaceVisibility: 'hidden',\n            transform: 'translateZ(0)',\n            transition: 'transform 0.25s ease-out',\n            '&:hover': {\n                transform: 'scale(1.05)'\n            }\n        }\n    })\n);\n\n\nexport const CardComponent = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.cardContainer}>\n                <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n                <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    );\n};\n\nexport default CardComponent;","import * as React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport Card from '../card/card.component'\n\nconst useStyles = makeStyles(theme => ({\n        cardList: {\n            width: '85vw',\n            margin: '0 auto',\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr 1fr 1fr',\n            gridGap: '20px'\n        }\n    })\n);\n\n\nexport const CardListComponent = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.cardList}>\n            {\n                props.monsters.map(monster =>\n                    <Card key={monster.id} monster={monster}></Card>\n                )\n            }\n        </div>\n    );\n};\n\nexport default CardListComponent;","import * as React from 'react';\nimport {makeStyles, TextField, Grid} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n        root: {\n            flexGrow: 1,\n        },\n        search: {\n            webkitAppearance: null,\n            border: null,\n            outline: null,\n            padding: '10px',\n            width: '150px',\n            lineHeight: '30px',\n            marginBottom: '30px',\n        }\n\n    })\n);\n\n\nexport const SearchBoxComponent = ({placeHolder, handleChange}) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n\n            <Grid item container spacing={3}>\n                <Grid item xs={12} className={classes.search}>\n                    <TextField\n                        variant=\"outlined\"\n                        placeholder={placeHolder}\n                        label={'Hledej'}\n                        onChange={handleChange}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default SearchBoxComponent;","import React, {Component} from 'react';\nimport {makeStyles} from \"@material-ui/core\";\nimport theme from './components/ui/Theme';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\n\nimport './App.css';\n\nimport CardListComponent from './components/card-list/card-list.component'\nimport SearchBoxComponent from './components/search-box/search-box.component'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchField: '',\n            monsters: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}))\n    }\n\n    handleChange = e => {\n        this.setState({'searchField': e.target.value})\n    }\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n        return (\n            <ThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <Typography variant={'h1'}>Monster rolodex</Typography>\n                    <SearchBoxComponent\n                        placeHolder={'search monster'}\n                        handleChange={this.handleChange}\n                    />\n                    <CardListComponent monsters={filteredMonsters}>\n                    </CardListComponent>\n                </div>\n            </ThemeProvider>\n        )\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}